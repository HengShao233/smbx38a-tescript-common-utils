SMBXFile69
A|0||||,,,
BTNS|Mario|Luigi|Peach|Toad|Link
P1|-199944|-200542
M|1|-200000|-200600|1600|600|0|0|0|0|0|0|0|19,-1|
M|2|-180000|-180600|800|600|0|0|0|0|0|0|0|0,-1|
M|3|-160000|-160600|800|600|0|0|0|0|0|0|0|0,-1|
M|4|-140000|-140600|800|600|0|0|0|0|0|0|0|0,-1|
M|5|-120000|-120600|800|600|0|0|0|0|0|0|0|0,-1|
M|6|-100000|-100600|800|600|0|0|0|0|0|0|0|0,-1|
M|7|-80000|-80600|800|600|0|0|0|0|0|0|0|0,-1|
M|8|-60000|-60600|800|600|0|0|0|0|0|0|0|0,-1|
M|9|-40000|-40600|800|600|0|0|0|0|0|0|0|0,-1|
M|10|-20000|-20600|800|600|0|0|0|0|0|0|0|0,-1|
M|11|0|-600|800|600|0|0|0|0|0|0|0|0,-1|
M|12|20000|19400|800|600|0|0|0|0|0|0|0|0,-1|
M|13|40000|39400|800|600|0|0|0|0|0|0|0|0,-1|
M|14|60000|59400|800|600|0|0|0|0|0|0|0|0,-1|
M|15|80000|79400|800|600|0|0|0|0|0|0|0|0,-1|
M|16|100000|99400|800|600|0|0|0|0|0|0|0|0,-1|
M|17|120000|119400|800|600|0|0|0|0|0|0|0|0,-1|
M|18|140000|139400|800|600|0|0|0|0|0|0|0|0,-1|
M|19|160000|159400|800|600|0|0|0|0|0|0|0|0,-1|
M|20|180000|179400|800|600|0|0|0|0|0|0|0|0,-1|
M|21|200000|199400|800|600|0|0|0|0|0|0|0|0,-1|
B||134|-200000|-200448||0|0||32|32
B||134|-199968|-200448||0|0||32|32
B||134|-199936|-200448||0|0||32|32
B||134|-199904|-200448||0|0||32|32
B||134|-199872|-200448||0|0||32|32
B||134|-199840|-200448||0|0||32|32
B||134|-199808|-200448||0|0||32|32
B||134|-199776|-200448||0|0||32|32
B||134|-199744|-200448||0|0||32|32
B||134|-199712|-200448||0|0||32|32
B||134|-199680|-200448||0|0||32|32
B||134|-199648|-200448||0|0||32|32
B||134|-199616|-200448||0|0||32|32
B||134|-199584|-200448||0|0||32|32
B||134|-199552|-200448||0|0||32|32
B||134|-199520|-200448||0|0||32|32
B||134|-199488|-200448||0|0||32|32
B||115|-199456|-200480||0|0||32|32
B||134|-199456|-200448||0|0||32|32
B||134|-199424|-200448||0|0||32|32
B||134|-199392|-200448||0|0||32|32
B||134|-199360|-200448||0|0||32|32
B||134|-199328|-200448||0|0||32|32
B||134|-199296|-200448||0|0||32|32
B||134|-199264|-200448||0|0||32|32
B||134|-199232|-200448||0|0||32|32
B||134|-199200|-200448||0|0||32|32
B||134|-199168|-200448||0|0||32|32
B||134|-199136|-200448||0|0||32|32
B||115|-199104|-200480||0|0||32|32
B||134|-199104|-200448||0|0||32|32
B||115|-199072|-200512||0|0||32|32
B||115|-199072|-200480||0|0||32|32
B||134|-199072|-200448||0|0||32|32
B||134|-199040|-200448||0|0||32|32
B||134|-199008|-200448||0|0||32|32
B||134|-198976|-200448||0|0||32|32
B||134|-198944|-200448||0|0||32|32
B||134|-198912|-200448||0|0||32|32
B||134|-198880|-200448||0|0||32|32
B||115|-198848|-200480||0|0||32|32
B||134|-198848|-200448||0|0||32|32
B||134|-198816|-200448||0|0||32|32
B||134|-198784|-200448||0|0||32|32
B||134|-198752|-200448||0|0||32|32
B||115|-198720|-200512||0|0||32|32
B||115|-198720|-200480||0|0||32|32
B||134|-198720|-200448||0|0||32|32
B||115|-198688|-200480||0|0||32|32
B||134|-198688|-200448||0|0||32|32
B||134|-198656|-200448||0|0||32|32
B||134|-198624|-200448||0|0||32|32
B||134|-198592|-200448||0|0||32|32
B||134|-198560|-200448||0|0||32|32
B||134|-198528|-200448||0|0||32|32
B||134|-198496|-200448||0|0||32|32
B||134|-198464|-200448||0|0||32|32
B||134|-198432|-200448||0|0||32|32
L|%44%65%66%61%75%6C%74|1
L|%44%65%73%74%72%6F%79%65%64%20%42%6C%6F%63%6B%73|0
L|%53%70%61%77%6E%65%64%20%4E%50%43%73|1
E|%4C%65%76%65%6C%20%2D%20%53%74%61%72%74||1,|0///||0,0,0,0,0,0,0,0,0,0,0,0|//|0/0|||,0/0,0,0,0,0/0/%73%74%61%74%65%54%65%73%74
E|%50%20%53%77%69%74%63%68%20%2D%20%53%74%61%72%74||0,|0///||0,0,0,0,0,0,0,0,0,0,0,0|//|0/0|||,0/0,0,0,0,0
E|%50%20%53%77%69%74%63%68%20%2D%20%45%6E%64||0,|0///||0,0,0,0,0,0,0,0,0,0,0,0|//|0/0|||,0/0,0,0,0,0
E|%74%69%6D%65%55%74%69%6C||1,|0///||0,0,0,0,0,0,0,0,0,0,0,0|//|0/0|||,0/0,0,0,0,0/0/%74%69%6D%65%55%6E%69%74
E|%6D%61%69%6E||1,|0///||0,0,0,0,0,0,0,0,0,0,0,0|//|0/0|||,0/0,0,0,0,0/0/%6D%61%69%6E
E|%4C%69%62%4C%69%6E%65||1,|0///||0,0,0,0,0,0,0,0,0,0,0,0|//|0/0|||,0/0,0,0,0,0/0/%6C%69%62%4C%69%6E%65
E|%6C%69%6E%65||1,|0///||0,0,0,0,0,0,0,0,0,0,0,0|//|0/0|||,0/0,0,0,0,0/0/%6C%69%6E%65%54%65%73%74
E|%62%6D%70%54%65%73%74||1,|0///||0,0,0,0,0,0,0,0,0,0,0,0|//|0/0|||,0/0,0,0,0,0/0/%62%6D%70%54%65%73%74
V|%66%72%61%6D%65%43%6F%75%6E%74|0|0
V|%73%74%61%74%65%56%61%72|0|0
V|%6C%69%6E%65%49%64|0|0
V|%64%65%62%75%67%56%61%6C%31|0|0
V|%64%65%62%75%67%56%61%6C%32|0|0
V|%64%65%62%75%67%56%61%6C%33|0|0
V|%64%65%62%75%67%56%61%6C%34|0|0
V|%64%65%62%75%67%56%61%6C%35|0|0
V|%64%65%62%75%67%56%61%6C%36|0|0
V|%4E%65%77%56%61%72%69%61%62%6C%65|0|0
SU|%74%69%6D%65%55%6E%69%74|RGltIGkgQXMgTG9uZyA9IDANCg0KRXhwb3J0IFNjcmlwdCB0aW1lTWdyX25vdyhSZXR1cm4gTG9uZykNCglSZXR1cm4gaQ0KRW5kIFNjcmlwdA0KDQpEbw0KCVZhbChmcmFtZUNvdW50KSA9IHRpbWVNZ3Jfbm93KCkNCglpICs9IDENCglDYWxsIFNsZWVwKDEpDQpMb29wDQoJAA|AQAAAAAAAAAAAA
SU|%73%74%61%74%65%54%65%73%74||AQBAAAAAAAAAAA
SU|%6D%61%69%6E|RG8NCgknINTatdogMjAwINahyrENCglJZiB0aW1lTWdyX25vdygpID0gMjAwIFRoZW4NCgkJJyDH0Lu717TMrLW9IKGuz8LO56GvICB8INPDyrEgMjAwINahDQoJCUNhbGwgc3RhdGVNZ3JfY2hhbmdlU3RhdGVCeU5hbWUoImFmdGVybm9vbiIsIDIwMCkNCglFbmQgSWYNCg0KCScg1Nq12iA1MDAg1qHKsQ0KCUlmIHRpbWVNZ3Jfbm93KCkgPSA1MDAgVGhlbg0KCQknIMfQu7vXtMystb0goa7U57O/c6GvIHwg08PKsSA0MDAg1qENCgkJQ2FsbCBzdGF0ZU1ncl9jaGFuZ2VTdGF0ZUJ5TmFtZSgibW9ybmluZ3MiLCA0MDApDQoJRW5kIElmDQoJDQoJJyDU2rXaIDEwMDAg1qHKsQ0KCUlmIHRpbWVNZ3Jfbm93KCkgPSAxMDAwIFRoZW4NCgkJJyDH0Lu717TMrLW9IKGuze3Jz6GvIHwg08PKsSA0MDAg1qENCgkJQ2FsbCBzdGF0ZU1ncl9jaGFuZ2VTdGF0ZUJ5TmFtZSgibmlnaHQiLCA0MDApDQoJRW5kIElmDQoJDQoJJyDU2rXaIDEyMDAg1qHKsQ0KCUlmIHRpbWVNZ3Jfbm93KCkgPSAxMjAwIFRoZW4NCgkJJyDW1da5yc+0zsfQu7sg16q2+MfQu7vXtMystb0goa5uaWdodHihryB8INPDyrEgNDAwINahDQoJCUNhbGwgc3RhdGVNZ3JfY2hhbmdlU3RhdGVCeU5hbWUoIm5pZ2h0eCIsIDQwMCkNCglFbmQgSWYNCg0KCScgyPTXtMysu/rOqrfHzsjMrCDU8tPD17TMrLv61tC1xNa1y6LQwsS/serK0828seTBvw0KCUlmIHN0YXRlTW9kZWxfaXNTdGF0ZVN0YWJsZSgpIDw9IDAgVGhlbg0KCQknILTT17TMrLv61tC78cihw/vOqiChrmJnQ29sb3JSoa8g19a2zrXE17TMrNa1DQoJCVZhbChzdGF0ZVZhcikgPSBzdGF0ZU1vZGVsX2dldEN1ckZpZWxkQnlOYW1lKCJiZ0NvbG9yUiIpDQoJRW5kIElmDQoNCglDYWxsIFNsZWVwKDEpDQpMb29wDQoA|AQAAAAAAAAAAAA
SU|%6C%69%62%4C%69%6E%65||AQAAAAAAAAAAAA
SU|%6C%69%6E%65%54%65%73%74|JyC358/fzPW9xbG+INPD09rKtcqxyfqzybfntcS357jxu6+x7bTvDQonILjDvcWxvtLAwLUgbGliTGluZS5zbXQguq/K/byvDQonICAgICAgICAgICAgICAgICAgICAgICAgICAgLS0tLSDQoba5IDIwMjMwMjA0DQoNCicgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gz9/M9SBpZCC8xLTmDQoNCkRpbSBiaXRtYXBTdGFydElkeCBBcyBMb25nID0gNTAwMDAgICAgICAgICAgICAgICcgz9/M9cr9vt3TwyBiaXRtYXAgxvDKvCBpZCwgsrvSqtPrxuTL/CBiaXRtYXAg1ti4tCENCkRpbSBsaW5lQ291bnQgQXMgTG9uZyA9IDggICAgICAgICAgICAgICAgICAgICAgICcgz9/M9cr9wb8NCkRpbSB2ZXJ0Q291bnQgQXMgTG9uZyA9IDQwICAgICAgICAgICAgICAgICAgICAgICcgw7/M9c/ftqW148r9DQpEaW0gZHVzdENvdW50IEFzIExvbmcgPSAxMCAgICAgICAgICAgICAgICAgICAgICAnILO+sKPK/cG/DQpEaW0gbGluZUR1cmF0aW9uIEFzIExvbmcgPSAxMDAwICAgICAgICAgICAgICAgICAnIM/fzPWz1tD4yrGzpCAou+HL5rv6yc/PwrKotq8pDQoNCkRpbSBzY3JlZW5Qb3NYIEFzIERvdWJsZSA9IFN5c3ZhbChQbGF5ZXIxc2NyWCkNCkRpbSBzY3JlZW5Qb3NZIEFzIERvdWJsZSA9IFN5c3ZhbChQbGF5ZXIxc2NyWSkNCkRpbSBnbG9iYWxXaW5kQWxwaGEgQXMgRG91YmxlID0gMQ0KDQonIGJpdG1hcCBpZCC31sXkst/C1M6qIGJpdG1hcFN0YXJ0SWQgKyBbMCwgbGluZUNvdW50ICsgZHVzdENvdW50IC0gMV0NCicgYml0bWFwILXE0rvQqdfWts7Ew8C01/bS1M/C08M6DQonICAgICAgIGJpdG1hcCgpLmRlc3R4IC0+IMnP0rvW1bXjIHgg1rUNCicgICAgICAgYml0bWFwKCkuZGVzdHkgLT4gyc/Su9bVteMgeSDWtQ0KJyAgICAgICBiaXRtYXAoKS5yb3RhdGFuZyAtPiDNuMP3tsgNCicgICAgICAgYml0bWFwKCkuc3JjaWQgLT4gz9/M9SBpZA0KJyAgICAgICBiaXRtYXAoKS5zY2FsZVggLT4gz9/M9bWxx7DX37n9tcTKsbzk1qEgKMO/1qErMSkNCicgICAgICAgYml0bWFwKCkuc2NhbGVZIC0+IM/fzPW1scewtcTL5rv61tbX0w0KDQonID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ILP1yry7rw0KDQpEaW0gc3RkSWR4IEFzIExvbmcgPSAwDQpEaW0gc3RkSWR4MiBBcyBMb25nID0gMA0KRGltIHN0ZExpbmVJZHggQXMgTG9uZyA9IDANCkRpbSBwWCBBcyBEb3VibGUgPSAwDQpEaW0gcFkgQXMgRG91YmxlID0gMA0KDQpEaW0gaW5pdGVkIEFzIEJ5dGUgPSAwDQoNCkRvDQogICAgSWYgdGltZU1ncl9ub3coKSA9IDUwIFRoZW4NCiAgICAgICAgJyDJ6sfrIGJpdG1hcA0KICAgICAgICBGb3Igc3RkSWR4ID0gYml0bWFwU3RhcnRJZHggVG8gYml0bWFwU3RhcnRJZHggKyBsaW5lQ291bnQgLSAxDQogICAgICAgICAgICBDYWxsIEJNUENyZWF0ZShzdGRJZHgsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDEsIDEsIDAsIDAsIDAsIC0xKQ0KICAgICAgICAgICAgQml0bWFwKHN0ZElkeCkuaGlkZSA9IDENCiAgICAgICAgICAgIEJpdG1hcChzdGRJZHgpLnNjcmlkID0gbGliTGluZV9hbGxvY2F0ZUxpbmUodmVydENvdW50KQ0KCQkJQml0bWFwKHN0ZElkeCkucm90YXRhbmcgPSAtMg0KICAgICAgICAgICAgQ2FsbCBsaWJMaW5lX3NldE5wYyhCaXRtYXAoc3RkSWR4KS5zY3JpZCwgNDUpDQogICAgICAgIE5leHQNCiAgICAgICAgaW5pdGVkID0gMQ0KICAgIEVuZCBJZg0KDQogICAgSWYgZ2xvYmFsV2luZEFscGhhID4gMCBBbmQgaW5pdGVkID0gMSBUaGVuDQogICAgICAgIHNjcmVlblBvc1ggPSBTeXN2YWwoUGxheWVyMXNjclgpDQogICAgICAgIHNjcmVlblBvc1kgPSBTeXN2YWwoUGxheWVyMXNjclkpDQoNCiAgICAgICAgRm9yIHN0ZElkeCA9IGJpdG1hcFN0YXJ0SWR4IFRvIGJpdG1hcFN0YXJ0SWR4ICsgbGluZUNvdW50IC0gMQ0KICAgICAgICAgICAgc3RkTGluZUlkeCA9IEJpdG1hcChzdGRJZHgpLnNjcmlkDQogICAgICAgICAgICBJZiBCaXRtYXAoc3RkSWR4KS5yb3RhdGFuZyA+IC0xIFRoZW4NCiAgICAgICAgICAgICAgICBwWCA9IEJpdG1hcChzdGRJZHgpLmRlc3R4DQogICAgICAgICAgICAgICAgcFkgPSBCaXRtYXAoc3RkSWR4KS5kZXN0eQ0KDQogICAgICAgICAgICAgICAgcFkgKz0gQml0bWFwKHN0ZElkeCkuc2NhbGV5ICogc2luKEJpdG1hcChzdGRJZHgpLnNjYWxleCAqIDAuMSArIDEwICogQml0bWFwKHN0ZElkeCkuc2NhbGV5KSAqIDUwDQogICAgICAgICAgICAgICAgcFggKz0gMjAgKyBzaW4oQml0bWFwKHN0ZElkeCkuc2NhbGV4ICogQml0bWFwKHN0ZElkeCkuc2NhbGV5ICogNSkgKiAyDQoNCiAgICAgICAgICAgICAgICBDYWxsIGxpYkxpbmVfcHVzaFBvaW50KHN0ZExpbmVJZHgsIHBYLCBwWSkNCiAgICAgICAgICAgICAgICBDYWxsIGxpYkxpbmVfc2V0V2lkdGgoc3RkTGluZUlkeCwgNSkNCiAgICAgICAgICAgICAgICBDYWxsIGxpYkxpbmVfc2V0U2VnbWVudFNjYWxlKHN0ZExpbmVJZHgsIDEuNSkNCgkJCQlDYWxsIGxpYkxpbmVfc2V0U3RlcChzdGRMaW5lSWR4LCAxKQ0KICAgICAgICAgICAgICAgIENhbGwgbGliTGluZV9zZXRTcmNXaWR0aChzdGRMaW5lSWR4LCAxKQ0KICAgICAgICAgICAgICAgIENhbGwgbGliTGluZV9zZXRBbHBoYShzdGRMaW5lSWR4LCAtMzIgKiAoMSAtIGNvcyhQaSAqICgxIC0gYWJzKEJpdG1hcChzdGRJZHgpLnJvdGF0YW5nKSkpKSkNCgkJCQlDYWxsIGxpYkxpbmVfc2V0TG9zcyhzdGRMaW5lSWR4LCAtMC41KQ0KCQkJCUNhbGwgbGliTGluZV9zZXRMb3NzT2Zmc2V0KHN0ZExpbmVJZHgsIDApDQoJCQkJQ2FsbCBsaWJMaW5lX3NldExvc3NJbmZNdWwoc3RkTGluZUlkeCwgMSkNCiAgICAgICAgICAgICAgICBCaXRtYXAoc3RkSWR4KS5zY2FsZXggKz0gMQ0KICAgICAgICAgICAgICAgIEJpdG1hcChzdGRJZHgpLnJvdGF0YW5nIC09IDAuMDINCgkJCQlCaXRtYXAoc3RkSWR4KS5kZXN0eCA9IHBYDQogICAgICAgICAgICBFbHNlSWYgcm5kID4gMC45ODUgVGhlbg0KICAgICAgICAgICAgICAgIEJpdG1hcChzdGRJZHgpLnNjYWxleCA9IDANCiAgICAgICAgICAgICAgICBCaXRtYXAoc3RkSWR4KS5zY2FsZXkgPSBybmQNCg0KICAgICAgICAgICAgICAgIHBYID0gc2NyZWVuUG9zWCAtIHJuZCAqIDEwMCAtIDMwMA0KICAgICAgICAgICAgICAgIHBZID0gc2NyZWVuUG9zWSArIDYwMCAqIHJuZA0KDQogICAgICAgICAgICAgICAgRm9yIHN0ZElkeDIgPSAwIFRvIHZlcnRDb3VudCAtIDENCiAgICAgICAgICAgICAgICAgICAgQ2FsbCBsaWJMaW5lX3NldFBvaW50KHN0ZExpbmVJZHgsIHN0ZElkeDIsIDAsIDApDQogICAgICAgICAgICAgICAgTmV4dA0KICAgICAgICAgICAgICAgIEJpdG1hcChzdGRJZHgpLmRlc3R4ID0gcFgNCiAgICAgICAgICAgICAgICBCaXRtYXAoc3RkSWR4KS5kZXN0eSA9IHBZDQoJCQkJQ2FsbCBsaWJMaW5lX3NldEFscGhhKHN0ZExpbmVJZHgsIDApDQogICAgICAgICAgICAgICAgQml0bWFwKHN0ZElkeCkucm90YXRhbmcgPSAxDQoJCQlFbHNlDQoJCQkJQ2FsbCBsaWJMaW5lX3NldEFscGhhKHN0ZExpbmVJZHgsIDApDQogICAgICAgICAgICBFbmQgSWYNCiAgICAgICAgTmV4dA0KICAgIEVuZCBJZg0KICAgIENhbGwgU2xlZXAoMSkNCkxvb3ANCg0KAA|AQA5AAAAAAAAAA
SU|%62%6D%70%54%65%73%74|DQoNCgA|AQAAAAAAAAAAAA
R|%73%74%61%74%65%4C%69%73%74|%6C%69%62%4C%69%6E%65%4C%69%73%74
